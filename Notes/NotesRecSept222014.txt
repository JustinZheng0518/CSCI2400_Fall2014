Call Stacks
					  Memory
	-------		--------	  ------
	|    *|----|	|main()|	  |Data|
	-------		--------	 \------
	%eip	   ---->|mult()|	  |Code|
			--------	 /------
	mult(int a, int b)
		return a*b;
---
	--------		         ---------	 --------
	|Ox1F29|<-Grabs->	0x1F29-->|main() |	 |0x1F29| <-- Not Data
	--------		         ---------	\--------
	%eip			0xFE10-->|func1()|	 |CODE  |
				         ---------	/--------
---
									Memory (IA32)
	Increasing Addresses				 ---------	 --------  0xMAX
		/\		%esp			 |main() |	 |Stack |
		||		|		         ---------	 --------
		||		|		0x1F29-->|func2()|	 |...   | 
		||		|		         ---------	\--------
		||		v		0xFE10-->|func1()|	 |CODE  |
			Stack Top moved Down	         ---------	/--------
			For a push.
---
	pushl				popl
			 --------
		%esp->	 |	| <-@esp
		%esp->	 --------
		=%esp-4->|	| =%esp+4	
		 -------- %esp
			 |	|
			 |	|
			 |	|
			 --------
	pushl 
		%eax	%eax
		SRC	[123]
	popl %ebx
---
	
	main()
	|
	v
	f1() ---|
	|	|
	v	v
	f2()	f3()
---

		Stack
		---------
	ebp->	|	|	<-ebp-	local vars	main()
		---------		register states		
		|x,y	|	}-----	argument build
		---------
	esp->	|0x50	|	<-esp-	return address
		---------
		|	|
		---------
		---------	---------	---------
	ebp->	|main()	|	|main()	|	|main()	|
		--------- -->	--------- -->	---------
	esp->	|	|	|f1()	|	|f1()	|
		--------- -->	--------- -->	---------
						|f1Call2|
						---------
	Creates a stack for each call in main, (then creates a stack to remove?)
---
	f1:
	{
	  pushl %ebp
	  movl %esp, %ebp
	}	
	...
	{
	  movl %ebp, %esp
	  popl %ebp
	  ret
	}
	
	f1(int x, y)
		-------------------	-------------------		
	ebp-->	|		  |	|		  |
		-------------------	-------------------
		|		  |	|		  |
		-------------------	-------------------					main:
		|x		  |	|x		  |					...
	main()	-------------------	-------------------				---->	call 0x8F
		|y	          |	|y		  |				|	...
		-------------------	-------------------				|
		|0x100		  |	|		  |				|
		-------------------	-------------------				|
	esp-->	| OLD edp         |	|		  |				|	---------
		-------------------	-------------------				--------|--*	|
		...										---------
		-------------------								%eip
		|...		  |
		-------------------
		|f1(){}		  |
		-------------------
		|		  |
		-------------------





